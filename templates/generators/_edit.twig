{% extends '_layouts/cp' %}

{% set fullPageForm = true %}

{% import '_includes/forms' as forms %}

{% set title = (generatorId is defined ? 'Edit dummy generator'|t : 'New dummy generator'|t) %}

{% set crumbs = [
    { label: craft.amSeed.name, url: url('amseed') },
    { label: 'Dummy generators'|t, url: url('amseed/generators') },
    { label: title, url: '#' }
] %}

{% block saveButton %}
    <input type="submit" class="btn submit" value="{{ (generatorId is defined ? 'Save' : 'Save, and generate dummies')|t }}">
{% endblock %}

{% block content %}
    <input type="hidden" name="action" value="amSeed/generators/saveGenerator">
    <input type="hidden" name="redirect" value="amseed/generators">
    {% if generatorId is defined -%}<input type="hidden" name="generatorId" value="{{ generatorId }}">{% endif %}

    {{ forms.textField({
        label: "Name"|t,
        instructions: "What this dummy generator will be called in the CP."|t,
        id: 'name',
        name: 'name',
        value: (generator is defined ? generator.name : null),
        errors: (generator is defined ? generator.getErrors('name') : null),
        first: true,
        required: true,
        autofocus: true,
    }) }}
    {{ forms.textField({
        label: "Generate amount"|t,
        instructions: "How many dummies do you want to generate?"|t,
        id: 'total',
        name: 'total',
        size: 5,
        value: (generator is defined ? generator.total : null),
        errors: (generator is defined ? generator.getErrors('total') : null),
        required: true,
    }) }}
    <hr>
    {{ forms.selectField({
        label: "Element type"|t,
        instructions: "Which element type is this dummy generator about?"|t,
        id: 'elementType',
        name: 'elementType',
        options: elementTypes,
        value: (generator is defined ? generator.elementType : null),
        errors: (generator is defined ? generator.getErrors('elementType') : null),
        required: true,
        toggle: true,
    }) }}
    <hr>
    {% for type, name in elementTypes %}
        {%- set active = (generatorId is defined and generator.elementType == type ? true : (generatorId is defined ? false : loop.first)) -%}

        <div id="{{ type }}"{% if not active %} class="hidden"{% endif %}>
            {% if elementTypeLocales[type] is defined %}
                {{ forms.checkboxselectField({
                    label: "Locale"|t,
                    instructions: "Which locale do you want to create dummies for?"|t,
                    id: 'settings[' ~ type ~ '][locale]',
                    name: 'settings[' ~ type ~ '][locale]',
                    options: attribute(elementTypeLocales, type),
                    value: (generator is defined and generator.settings['locale'] is defined ? generator.settings['locale'] : null),
                }) }}
            {% endif %}

            {% if elementTypeSources[type] is not defined or not elementTypeSources[type]|length %}
                {% set noSourcesInput %}
                    <p class="error">{{ 'No sources available.'|t }}</p>
                {% endset %}
                {{ forms.field({
                    label: "Source"|t,
                    instructions: "Which source do you want to create dummies for?"|t,
                }, noSourcesInput) }}
            {% else %}
                {{ forms.selectField({
                    label: "Source"|t,
                    instructions: "Which source do you want to create dummies for?"|t,
                    id: 'settings[' ~ type ~ '][source]',
                    name: 'settings[' ~ type ~ '][source]',
                    options: attribute(elementTypeSources, type),
                    value: (generator is defined and generator.settings['source'] is defined ? generator.settings['source'] : null),
                    toggle: true,
                    targetPrefix: type ~ '_'
                }) }}
            {% endif %}

            {% include 'amseed/generators/_includes/sourceFields' %}
            {% include 'amseed/generators/_includes/attributes' %}
        </div>
    {% endfor %}

{% endblock %}

{% includejs %}
    $(document).ready(function() {
        $('select[id*="source"]:not([data-targetPrefix=""])').each(function() {
            var $obj = $(this),
                $options = $('option', $obj),
                targetPrefix = $obj.data('targetPrefix');

            $obj.on('change', function() {
                var sourceId = $(this).val(),
                    $container = $('#' + targetPrefix + sourceId.replace(':', '\\:'));

                $options.each(function() {
                    var tempId = $(this).val(),
                        $tempContainer = $('#' + targetPrefix + tempId.replace(':', '\\:'));

                    $tempContainer.addClass('hidden');
                });

                $container.removeClass('hidden');
            });
        });
    });
{% endincludejs %}
